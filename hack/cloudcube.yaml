apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cloudcube
  namespace: default
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cloudcube
    spec:
      volumes:
        - name: output
          emptyDir: {}
        - name: hls
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: cloudcube-nginx
      containers:

        - name: "sp-compositor"
          image: "streamplace/sp-compositor"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
            - name: URL
              value: "https://streamplace.github.io/demo-video/"
            - name: SELECTOR
              value: "canvas"
          volumeMounts:
            - name: output
              mountPath: /app/output

        - name: "sp-ffmpeg"
          image: "streamplace/sp-ffmpeg"
          imagePullPolicy: IfNotPresent
          command:
            - ffmpeg
            - -y
            - -framerate
            - "30"
            - -loglevel
            - verbose
            - -f
            - x11grab
            - -video_size
            - 1920x1080
            - -i
            - "127.0.0.1:99"
            - -c:v
            - libx264
            - -r
            - "30"
            - -preset
            - ultrafast
            - -f
            - hls
            - /hls/cloudcube.m3u8
          volumeMounts:
            - name: output
              mountPath: /output
            - name: hls
              mountPath: /hls

        - name: nginx
          image: "nginx:stable-alpine"
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: hls
              mountPath: /hls

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudcube-nginx
data:
  nginx.conf: |-
    events {
      worker_connections  1024;
    }

    http {
      server {
        root /hls;
        location / {
          try_files $uri =404;
        }
      }
    }



---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cloudcube
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - secretName: sneakers.iame.li
    hosts:
    - sneakers.iame.li
  rules:
  - host: sneakers.iame.li
    http:
      paths:
      - path: /cloudcube
        backend:
          serviceName: cloudcube
          servicePort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: cloudcube
spec:
  type: ClusterIP
  selector:
    app: cloudcube
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
