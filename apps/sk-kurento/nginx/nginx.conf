worker_processes  5;  ## Default: 1

worker_rlimit_nofile 8192;
events {
  worker_connections 4096;
}

http {
  error_log /var/log/nginx/error.log info;
  # http://nginx.org/en/docs/http/ngx_http_core_module.html
  types_hash_max_size 2048;
  server_names_hash_max_size 512;
  server_names_hash_bucket_size 64;
  client_max_body_size 50M;

  ssl_certificate /ssl/certchain.pem;
  ssl_certificate_key /ssl/key.pem;

  # performance enhancement for SSL
  ssl_stapling on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;

  # Disable all weak ciphers
  ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
  # enables TLSv1.0, 1.1, and 1.2 but not SSLv2 or 3 as they are both weak and
  # deprecated.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  # Specifies that server ciphers should be preferred over client (e.g.
  # browser) ciphers when using SSL/TLS.
  ssl_prefer_server_ciphers on;

  # config to enable HSTS(HTTP Strict Transport Security)
  # https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  add_header Strict-Transport-Security "max-age=31536000;";

  server {
    listen 443 ssl;
    server_name _;

    location / {
      return 503;
    }
  }


    upstream static {
      server localhost:8999;
    }

    upstream kurento {
      server localhost:8888;
    }

  server {
    listen 8433 ssl;
    server_name _;
        location /kurento {
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-NginX-Proxy true;

          add_header P3P 'CP="Please contact support."';

          proxy_redirect off;

          # Handle Web Socket connections
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_pass http://localhost:8888;
        }
        location / {
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-NginX-Proxy true;

          add_header P3P 'CP="Please contact support."';

          proxy_redirect off;

          # Handle Web Socket connections
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_pass http://localhost:8999/;
        }
      }
    }
